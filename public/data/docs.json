[{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/555","url":"","title":"Creating Previews","command":"creating-previews","content":"<meta path=\"help/preview\">\r\n\r\n# Creating Previews\r\n\r\nEach choice in an `arg` can have an associated `preview`. Previews gracefully enhance from a string all the way up to multiple async functions that return strings based on choice.\r\n\r\n\r\n```js\r\n/** @type {import(\"@johnlindquist/kit\")} */\r\n\r\n// Just a string\r\nawait arg(\r\n  \"Select a fruit\",\r\n  md(`I recommend typing \"Apple\"`, `p-5`) // \"md\" converts strings to HTML. \"p-5\" is a padding style applied to the container\r\n)\r\n\r\n// A function, takes typed \"input\", returns string\r\nawait arg(\"Select a fruit\", input =>\r\n  md(`You typed \"${input}\"`, `p-5`)\r\n)\r\n\r\n// An async function, takes typed \"input\", returns string\r\n// `hightlight` requires \"async\" takes markdown, applies code highlighting\r\n\r\nawait arg(\r\n  \"Select a fruit\",\r\n  async input =>\r\n    await highlight(` \r\n~~~js\r\nawait arg(\"${input}\")\r\n~~~\r\n  `)\r\n)\r\n\r\n// A \"preview\" per choice\r\nawait arg(\"Select a fruit\", [\r\n  { name: \"Apple\", preview: `Apple, yum! 🍎` },\r\n  { name: \"Banana\", preview: `Banana, yum too! 🍌` },\r\n])\r\n\r\n// Async \"preview\" per choice\r\nlet preview = async ({ name, input }) =>\r\n  await highlight(`\r\n~~~js\r\n// ${name}\r\nawait arg(\"${input}!\")\r\n~~~\r\n`)\r\n\r\n//\"input\" param is required to switch prompt mode from \"filter list\" to \"generate list\"\r\nawait arg(\"Select a fruit\", async input => {\r\n  return [\r\n    { name: `Apple ${input}`, preview },\r\n    { name: `Banana ${input}`, preview },\r\n  ]\r\n})\r\n```","extension":".md","dir":"help","file":"preview"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/548","url":"","title":"Check for Updates","command":"check-for-updates","content":"<meta path=\"kit/update\">\n      \n# Check for Updates\n\nKit.app will check for updates each time your machine wakes from sleep. But if you heard about an update and just can't wait, trigger this command to grab it.\n","extension":".md","dir":"kit","file":"update"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/547","url":"","title":"Toggle Tray Icon","command":"toggle-tray-icon","content":"<meta path=\"kit/toggle-tray\">\n      \n# Toggle Tray Icon\n\nToggle if the system tray icon is visible\n","extension":".md","dir":"","file":""},{"system":"unlock-screen","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/546","url":"","title":"View System Event Scripts","command":"view-system-event-scripts","content":"<meta path=\"kit/system-events\">\n      \n# View System Event Scripts\n\nThis menu shows scripts that run on system events.\n\nAdd the `System` metadata to run your script on a system event\n\n```js\n// System: unlock-screen\n```\n\nAvailable events:\n\n- suspend\n- resume\n- on-ac\n- on-battery\n- shutdown\n- lock-screen\n- unlock-screen\n- user-did-become-active\n- user-did-resign-active\n- Read about the available events [here](https://www.electronjs.org/docs/latest/api/power-monitor#events)\n\n> Note: YMMV based on your specific machine setup.\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/545","url":"","title":"Sync $PATH from Terminal to Kit.app","command":"sync-dollarpath-from-terminal-to-kitapp","content":"<meta path=\"kit/sync-path-instructions\">\n      \n# Sync $PATH from Terminal to Kit.app\n\nHave a command that's working in your terminal, but doesn't work when you call it with Script Kit?\n\nUse this to sync up your \"PATH\" from your terminal to the \"PATH\" that Script Kit will use.\n\nYou can manually edit a `PATH` value any time in `~/.kenv/.env`\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/544","url":"","title":"Switch to TypeScript Mode","command":"switch-to-typescript-mode","content":"<meta path=\"kit/switch-to-ts\">\n      \n# Switch to TypeScript Mode\n\nPrefer TypeScript for your scripts? Hit _Enter_!\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/543","url":"","title":"Switch to JavaScript Mode","command":"switch-to-javascript-mode","content":"<meta path=\"kit/switch-to-js\">\n      \n# Switch to JavaScript Mode\n\nPrefer JavaScript for your scripts? Hit _Enter_!\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/542","url":"","title":"Prepare Script for Stream Deck","command":"prepare-script-for-stream-deck","content":"<meta path=\"kit/stream-deck\">\n      \n# Prepare Script for Stream Deck\n\nWant to map a script to your Stream Deck buttons? Use this to walk you through the process!\n","extension":".md","dir":"","file":""},{"schedule":"*/10 * * * * *","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/541","url":"","title":"View Schedule","command":"view-schedule","content":"<meta path=\"kit/schedule\">\n      \n# View Schedule\n\nList all of the scheduled scripts and see the next time time they'll run.\n\nSchedule a script to run on a cron with the `Schedule` metadata:\n\n```js\n// Schedule: */10 * * * * *\n```\n\nUse [https://crontab.guru/](https://crontab.guru/) to easily generate cron syntax.\n","extension":".md","dir":"kit","file":"schedule"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/540","url":"","title":"Quit","command":"quit","content":"<meta path=\"kit/quit\">\n      \n# Quit\n\nSee you soon! 👋\n","extension":".md","dir":"kit","file":"quit"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/539","url":"","title":"Open Script Kit at Login","command":"open-script-kit-at-login","content":"<meta path=\"kit/open-at-login\">\n      \n# Open Script Kit at Login\n\nToggle if Script Kit opens when you log on\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/538","url":"","title":"Manage npm Packages","command":"manage-npm-packages","content":"<meta path=\"kit/manage-npm\">\n      \n# Manage npm Packages\n\nThis will help you install/uninstall packages from your `~/.kenv/node_modules`\n\n> Note: You can use the `npm` method in your script to prompt the user to auto-install:\n\n```js\nlet express = await npm(\"express\")\n```\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/537","url":"","title":"Open kit.log","command":"open-kitlog","content":"<meta path=\"kit/kit-log\">\n      \n# Open kit.log\n\nView the Kit.app log at `~/.kit/logs/kit.log`\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/536","url":"","title":"Clear Kit Prompt Cache","command":"clear-kit-prompt-cache","content":"<meta path=\"kit/kit-clear-prompt\">\n      \n# Clear Kit Prompt Cache\n\nEach time you move or resize the prompt around for your scripts, Script Kit will store the position and size. If you want to reset the position of you prompts back to the centered defaults, then run this command.\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/535","url":"","title":"Manage Kit Environments","command":"manage-kit-environments","content":"<meta path=\"kit/kenv-manage\">\n      \n# Manage Kit Environments\n\nA \"kenv\" (Kit Environment) is a directory with a `scripts` directory. This is the place to create a kenv to manage scripts for your dev team or projects that expose APIs (GitHub, Vercel, etc). We'll be releasing official Script Kit kenvs in the future to show off some of the best practices. 👍\n\nClone, create new, link, push, pull, remove. This menu allows you to manage any of the kenvs you've added to your machine.\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/534","url":"","title":"Credits","command":"credits","content":"<meta path=\"kit/credits\">\n      \n# Credits\n\n## John Lindquist\n\nDevelopment\n\n- [https://johnlindquist.com](https://johnlindquist.com)\n- [@johnlindquist](https://twitter.com/johnlindquist)\n\n## Vojta Holik\n\nDesign\n\n- [https://vojta.io/](https://vojta.io/)\n- [@vjthlk](https://twitter.com/vjthlk)\n\n## Supported By\n\n- [egghead.io](https://egghead.io)\n","extension":".md","dir":"kit","file":"credits"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/533","url":"","title":"Generate bin Files","command":"generate-bin-files","content":"<meta path=\"kit/create-all-bins\">\n      \n# Generate bin Files\n\nIf you manually manage files in the `scripts` dir (instead of using Kit.app or the `kit` CLI) you may run into the scenarios where you have to re-generate all the `bin` executables. This will do that for you.\n","extension":".md","dir":"","file":""},{"shortcut":"cmd option g","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/532","url":"","title":"Add/Change a Script Shortcut","command":"addchange-a-script-shortcut","content":"<meta path=\"kit/change-shortcut\">\n      \n# Add/Change a Script Shortcut\n\nThis list all the scripts and allows you to add a shortcut to it.\n\nYou can manually add shortcuts to scripts like so:\n\n```js\n// Shortcut: cmd option g\n```\n\nThis menu will manage that for you\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/531","url":"","title":"Change Script Kit Shortcut","command":"change-script-kit-shortcut","content":"<meta path=\"kit/change-main-shortcut\">\n      \n# Change Script Kit Shortcut\n\nDon't like `cmd+;`? Change it here!\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/530","url":"","title":"Change Editor","command":"change-editor","content":"<meta path=\"kit/change-editor\">\n      \n# Change Editor\n\nThis will re-prompt you to pick an editor from your PATH by updating your kenv `.env`.\n\nYou can always manually change the editor that Script Kit uses to open files in `~/.kenv/.env`.\n\nThe following would use `code` (assuming is on the \"PATH\").\n\n```bash\nKIT_EDITOR=code\n```\n\nIf `code` isn't on your PATH, you can add the full path to the editor.\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/529","url":"","title":"Add ~/.kit/bin to $PATH","command":"add-kitbin-to-dollarpath","content":"<meta path=\"kit/add-kit-to-profile\">\n      \n# Add ~/.kit/bin to $PATH\n\n> This is similar to VS Code's \"Add `code` to path\"\n\nYou can run the `kit` CLI from your terminal with\n\n```bash\n~/.kit/bin/kit\n```\n\nbut this option will allow you run the CLI with:\n\n```bash\nkit\n```\n\n> If you're familiar with adding to your `.zshrc`, just add `~/.kit/bin` to your PATH.\n\nThe `kit` CLI will allow you to run, edit, etc scripts from your terminal.\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/528","url":"","title":"Add ~/.kenv/bin to $PATH","command":"add-kenvbin-to-dollarpath","content":"<meta path=\"kit/add-kenv-to-profile\">\n      \n# Add ~/.kenv/bin to $PATH\n\nEach time you create a script, Script Kit also generates a command based on the name you can run from the terminal.\n\nIf you create a script named `list-downloads`, then Script Kit creates a `~/.kenv/bin/list-downloads` executable.\n\nThen you can run the command like so in the terminal:\n\n```bash\n~/.kenv/bin/list-downloads\n```\n\nThis will walk you through running the command without the full path:\n\n```bash\nlist-downloads\n```\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/527","url":"","title":"User Input","command":"user-input","content":"<meta path=\"help/user-input\">\n      \n# User Input\n\nReceive text from a user by adding `arg` to your script:\n\n```js\nlet value = await arg()\n```\n\n`arg` will prompt the user to enter text, wait for the text, then return the value of the text to `value` and continue on with the script.\nYou can then use `value` as a string in your script however you want.\n\nIf you want to tell the user what information the prompt expects, provide a string:\n\n```js\nawait arg(\"Please enter your name\")\n```\n\nIf you want give the user options to select, provide an array as the second argument:\n\n```js\nawait arg(\"Select a fruit:\", [\"apple\", \"banana\", \"grape\"])\n```\n\n## Drag and drop\n\nPrompt the user to drag and drop a file by using the `drop` method:\n\n```js\nlet filePath = await drop()\n```\n\n## Longer Text\n\nAllow the user to input multiple lines of text using `textarea`:\n\n```js\nlet text = await textarea()\n```\n\nPre-load the `textarea` with text by passing a string:\n\n```js\nlet pleaseEditMe = `Some text I want to edit`\nlet text = await textarea(pleaseEditMe)\n```\n\n## Code Editor\n\n(💵 In the future, using `editor` will require a paid update)\n\nLaunch a full code editor using `editor`. This is great\n\n```js\nlet text = await editor()\n```\n\nPre-load the `editor` with text and specify a language for code highlighting/features:\n\n```js\nlet text = `\n# My Markdown\n\n* one\n* two\n`\nlet text = await editor(text, \"markdown\")\n```\n\n## Keyboard Shortcut\n\n```js\nlet keyData = await hotkey()\n```\n\nIf you were to type `cmd+j`, `keyData` would give you the following response:\n\n```json\n{\n  \"key\": \"j\",\n  \"command\": true,\n  \"shift\": false,\n  \"option\": false,\n  \"control\": false,\n  \"fn\": false,\n  \"hyper\": false,\n  \"os\": false,\n  \"super\": false,\n  \"win\": false,\n  \"shortcut\": \"command j\"\n}\n```\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/526","url":"","title":"Run Shell Commands","command":"run-shell-commands","content":"<meta path=\"help/terminal-app\">\n      \n# Run Shell Commands\n\nScript Kit bundles [zx](https://github.com/google/zx) as the global `$`\n\nExample from their docs (make sure to `cd` to the proper dir)\n\n```js\nawait $`cat package.json | grep name`\n\nlet branch = await $`git branch --show-current`\nawait $`dep deploy --branch=${branch}`\n\nawait Promise.all([\n  $`sleep 1; echo 1`,\n  $`sleep 2; echo 2`,\n  $`sleep 3; echo 3`,\n])\n\nlet name = \"foo bar\"\nawait $`mkdir /tmp/${name}`\n```\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/525","url":"","title":"Store Data","command":"store-data","content":"<meta path=\"help/store-data\">\n\n# Store Data\n\n## Read/Write to a `.env` file\n\nUse `await env(\"SOME_KEY\")` to check if the value exists in the `~/.kenv/.env` file, if not, prompt the user to enter it and store it for the next time the script is run\n\n```js\nlet value = await env(\"MY_KEY\")\n```\n\n## Read/Write Data to a json file `db`\n\nThe `db` method will create a json file to store values for you in `~/.kenv/db`.\n\n```js\nlet data = await db({ values: [] })\n\nlet value = await arg(\"Type something\")\n\ndata.values.push(value)\nawait data.write()\n```\n","extension":".md","dir":"","file":""},{"shortcut":"option+g","shortcode":"g","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/524","url":"","title":"Keyboard Shortcuts","command":"keyboard-shortcuts","content":"<meta path=\"help/shortcuts\">\n      \n# Keyboard Shortcuts\n\n## Global Shortcuts\n\nAdd a global shortcut to any script by adding the `//Shortcut: ` metadata:\n\n```js\n// Shortcut: option+g\n```\n\nIn the `Run` tab, use the script options menu `>` to change a shortcut. (Hit `cmd+k` to toggle to the options menu)\nIn the `Kit` tab, you can run `Change script shortcut` to list all script with shortcuts and change them from there.\n\n## Shortcodes\n\nIf you have a script you run often, you can also use \"shortcodes\" in the app. Add the following to the top of your script:\n\n```js\n// Shortcode: g\n```\n\nNow, when you launch the app, type `g` then hit `space` to run the script.\n\nThe main menu (`Run New Kit Help Hot`) also uses shortcodes, so typing `h` then space will switch to the `Help` tab. Or `n` then space switches to the `New` tab.\n","extension":".md","dir":"help","file":"shortcuts"},{"schedule":"*/10 * * * * *","avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/523","url":"","title":"Schedule a Script","command":"schedule-a-script","content":"<meta path=\"help/schedule\">\n      \n# Schedule a Script\n\nUse cron syntax to run scripts on a schedule:\n\n```js\n// Schedule: */10 * * * * *\n```\n\n> Note: these scripts must not include `arg` or they will time out after 10 seconds\n","extension":".md","dir":"help","file":"schedule"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/522","url":"","title":"Subscribe to the Newsletter","command":"subscribe-to-the-newsletter","content":"<meta path=\"help/join\">\n      \n# Subscribe to the Newsletter\n\n- Featured Scripts\n- Latest Updates\n- Tutorials and lessons\n- Script Kit Tips and Tricks\n- Curated dev news\n","extension":".md","dir":"help","file":"join"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/521","url":"","title":"Get Help on Github Discussions","command":"get-help-on-github-discussions","content":"<meta path=\"help/get-help\">\n      \n# Get Help on Github Discussions\n\nThe Script Kit community lives on GitHub discussions.\n\nThis is the place to:\n\n- 🥰 &ensp;[Share scripts](https://github.com/johnlindquist/kit/discussions/categories/share)\n- 🙏 &ensp;[Ask questions](https://github.com/johnlindquist/kit/discussions/categories/q-a)\n- 💡 &ensp;[Discuss ideas](https://github.com/johnlindquist/kit/discussions/categories/ideas)\n- 😱 &ensp;[Report errors](https://github.com/johnlindquist/kit/discussions/categories/error)\n\nOr just hit _Enter_ to browse all.\n\n> We'll do our best to respond ASAP!\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/520","url":"","title":"Reading/Writing Files","command":"readingwriting-files","content":"<meta path=\"help/files\">\n      \n# Reading/Writing Files\n\nMost of the methods from [fs/promises](https://nodejs.org/api/fs.html#promises-api) and [fs-extra](https://www.npmjs.com/package/fs-extra) are globally available\n\n## Create a File\n\n```js\n// \"home\" is a method that wraps `path.resolve` based on your home directory\nlet filePath = home(\"projects\", \"kit\", \"note.txt\")\n// writes a file to the filePath using `fs-extra's` \"outputFile\"\nawait outputFile(filePath, `Drink more water`)\n```\n\n## Select and Edit a File\n\n```js\n// \"selectFile\" uses Finder's file selector\nlet filePath = await selectFile()\nlet contents = await readFile(filePath, \"utf-8\")\n\n// Pass the text contents into the editor to quickly edit a file\nlet result = await editor(contents)\nawait writeFile(filePath, result)\n```\n","extension":".md","dir":"help","file":"files"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/519","url":"","title":"FAQ","command":"faq","content":"<meta path=\"help/faq\">\n      \n# FAQ\n\n## What is Script Kit?\n\nScript Kit is an open-source dev tool for creating, running, editing, and sharing scripts.\n\nThese scripts can run in the Kit.app, the Terminal, GitHub actions, package.json scripts, webhooks, or pretty much anywhere.\n\n## Community of Scripters?\n\nThe main goal of Script Kit is to build a community of people who love to script away the frictions of their day! 🥰\n\n## What are Kit.app, kit, and kenvs?\n\n- Kit.app - The Kit.app provides a UI for your scripts. The app is \"script-driven\" meaning that every time you launch the app, you're really launching a script. The main menu, even though complex, is a script you could write.\n\n- kit - \"kit\" is the sdk of Script Kit\n\n  - A bundle of JavaScript common libs wrapped by an API to make writing scripts easier (`get`, `download`, `replace`, `outputFile`, etc)\n  - APIs for interacting with your OS (`edit`, `focusTab`, `say`, `notify`, etc)\n  - APIs for interacting with Kit.app and Terminal (`arg`, `env`, etc)\n  - Scripts and utils for app setup, managing kenvs, parsing scripts, etc\n\n- kenvs - Kit Enviroments (AKA \"kenv\") are directories that contain a \"scripts\" directory. If you point \"kit\" at a \"kenv\", kit will parse the scripts and give you tools to simplify running and managing them.\n","extension":".md","dir":"help","file":"faq"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/518","url":"","title":"Display Data","command":"display-data","content":"<meta path=\"help/display-data\">\n      \n## Display HTML\n\nUse the `div` method to display html.\n\n```js\nawait div(`<h1>Hi</h1>`)\n```\n\n### Add Padding\n\nThe second argument of `div` allows you to add [tailwind](https://tailwindcss.com/) classes to the container of your html. For example, `p-5` will add a `padding: 1.25rem;` to the container.\n\n```js\nawait div(`<h1>Hi</h1>`, `p-5`)\n```\n\n# Display Data\n\n## Display Markdown\n\nPass a string of markdown to the `md` method. This will convert the markdown to html which you can then pass to the `div`\n\n```js\nlet html = md(`\n# Hi\n`)\nawait div(html)\n```\n\nIf you want to highlight your markdown, pass the markdown string to the `await highlight()` method:\n\n```js\nlet html = await highlight(`\n# Hi\n`)\nawait div(html)\n```\n\n## Create a New Window\n\nUse the `show` method to spawn a new, persisting window that is disconnected from the script.\n\nMuch future work will be put into components/widgets that can run outside of the main app UI, but for now, it simply display any html you send to it:\n\n```js\nshow(`\n<div class=\"bg-black text-white h-screen p-5\">\n    Hello there!\n<div>\n\n`)\n```\n","extension":".md","dir":"","file":""},{"author":"John Lindquist","twitter":null,"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","discussion":"https://github.com/johnlindquist/kit/discussions/517","url":"","title":"Take Credit for Your Work","command":"take-credit-for-your-work","content":"<meta path=\"help/credit\">\n      \n# Take Credit for Your Work\n\nAdd the `Author` and `Twitter` metadata to get credited in the UI and on [scriptkit.com](https://scriptkit.com) for your script:\n\n```js\n// Author: John Lindquist\n// Twitter: @johnlindquist\n```\n","extension":".md","dir":"help","file":"credit"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/516","url":"","title":"Coming Soon","command":"coming-soon","content":"<meta path=\"help/coming-soon\">\n\n# Coming Soon\n\nMore docs coming soon... 😇\nBetter formatting/styles also incoming 😅\nPlanning on adding \"copy snippet\" and \"create script from example\" to each of the code snippets 🤓\n","extension":".md","dir":"","file":""},{"author":"John Lindquist","twitter":null,"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","discussion":"https://github.com/johnlindquist/kit/discussions/515","url":"","title":"Creating Scripts","command":"creating-scripts","content":"<meta path=\"new/new\">\n      \n# Creating Scripts\n\n## Pro-tips\n\n1. The fastest way to create a script: Launch the app as you normally would, then type\n\n```bash\nnew my-script-name\n```\n\nThen hit _Enter_.\n\n2. You can use TypeScript by opening the `Kit` tab and \"Switch to TypeScript Mode\"\n\n3. The files in the `~/.kenv/templates` dir will be used when creating new scripts. You can create a template with your personal data filled out `~/.kenv/templates/john.js` then in your `.env`, set `KIT_TEMPLATE=john`\n\n```js\n// Author: John Lindquist\n// Twitter: @johnlindquist\n```\n\n## Why the Comment?\n\nCreating a new script will add this comment to the top:\n\n```js\n/** @type {import(\"@johnlindquist/kit\")} */\n```\n\nThe line is _not_ required, but this comment helps code editors to apply the correct type definition files for autocomplete/code-hinting.\n\nIf you're in `TypeScript` mode (`Kit` tab, `Switch to TypeScript mode`), it will add this import to the top:\n\n```js\nimport \"@johnlindquist/kit\"\n```\n\nAgain, this line isn't required, but code editors using TypeScript will complain about `top-level await` if you don't include at least one import. This also helps the same way as the comment described above.\n","extension":".md","dir":"new","file":"new"},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/514","url":"","title":"Create a Script from a Gist","command":"create-a-script-from-a-gist","content":"<meta path=\"new/new-from-url\">\n      \n# Create a Script from a Gist\n\nIn the `Run` tab, with a script selected, hit `cmd+g` (think \"g\" for \"gist\").\n\nThis will create a gist then copy gist's url to the clipboard.\n\nYou can share this url with a friend, then they can copy/paste it into this `New from url` command to quickly grab it.\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/513","url":"","title":"Get Featured","command":"get-featured","content":"<meta path=\"new/browse-examples\">\n      \n# Get Featured\n\nSimply share your script to Script Kit's [GitHub Discussions](https://github.com/johnlindquist/kit/discussions/categories/share) in the \"share\" category and it will automatically (after a review period) get added to [scriptkit.com](https://scriptkit.com)\n\nYou'll even have a user page based on your GitHub user name: [scriptkit.com/johnlindquist](https://scriptkit.com/johnlindquist)\n\n## Prep a Script for Discussion\n\nWith a script selected, hit `cmd+s` (think \"s\" for \"share\"). This automatically:\n\n- Creates a gist of your script\n- Creates the install link\n- Copies the script and link to your clipboard\n- Opens the discussions page\n\nSo all you have to do is \"paste\"!\n","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/512","url":"","title":"I posted this from Script Kit 😉","command":"i-posted-this-from-script-kit","content":"Testing 😇","extension":".md","dir":"","file":""},{"avatar":"https://avatars.githubusercontent.com/u/36073?u=1617518acc4e480c94d57308adfedebcd936ffd1&v=4","user":"johnlindquist","author":"John Lindquist","twitter":null,"discussion":"https://github.com/johnlindquist/kit/discussions/509","url":"","title":"Coming Soon","command":"coming-soon","content":"<meta path=\"help/coming-soon\">\r\n\r\n- More docs coming soon... 😇\r\n- Better formatting/styles also incoming 😅\r\n- Planning on adding \"copy snippet\" and \"create script from example\" to each of the code snippets 🤓\r\n","extension":".md","dir":"","file":""}]
